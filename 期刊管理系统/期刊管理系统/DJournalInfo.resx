<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_cancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_yes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>